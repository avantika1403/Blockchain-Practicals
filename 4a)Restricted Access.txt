
Restricted Access :
Code :
pragma solidity ^0.4.21; 

contract AccessRestriction { 
  address public owner msg.sender; 
  uint public lastOwnerChange = now; 
  
  modifier onlyBy (address account) { 
      require(msg.sender == _account);
     _;
  }   
  
   modifier onlyAfter (uint _time) { 
       require(now >= _time); 
       _;
  } 

   modifier costs (uint _amount) { 
   require(msg.value >= _amount); 
   _;
   if (msg.value > _amount) { 
   msg.sender.transfer(msg.value-amount); 
   }
}
   function changeOwner (address _newOwner) public onlyBy (owner){ 
   owner = newOwner;
   }
 
   function buyContract() public payable onlyAfter(lastOwnerChange + 4 weeks) costs(1ether) {
   owner = msg.sender;
   lastOwnerChange  = now;
   }
}