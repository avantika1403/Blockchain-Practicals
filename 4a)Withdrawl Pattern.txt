Implement and demonstrate the use of the following in Solidity :
4a) Withdrawal Pattern, Restricted Access. Withdrawal Pattern :
pragma solidity ^0.8.4; 
contract withdrawalContract { 
     address public richest;
     uint public mostSent; 

     mapping (address => uint) pendingwithdrawals; 
     error NotEnoughEther(); 
     
     constructor() payable{
        richest.sender; 
        mostSent.value; 
     }
 
     function becomeRichest() public payable { 
            if (g.value < mostSent) revert NotEnoughIther();
            pendingwithdrawals[richest] += msg.value; 
            richest sander; 
            mostSent.value;
    } 
    
    function withdraw() public {
    uint amount = pendingwithdrawals[nsg.sender];
    pendingwithdrawals[sg.sender] = 0; 
    payable(msg.sender).transfer (amount);
   }
}

